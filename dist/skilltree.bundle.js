/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/css/skilltree.css":
/*!*******************************!*\
  !*** ./src/css/skilltree.css ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://front-enter/./src/css/skilltree.css?");

/***/ }),

/***/ "./src/skilltree.js":
/*!**************************!*\
  !*** ./src/skilltree.js ***!
  \**************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _css_skilltree_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css/skilltree.css */ \"./src/css/skilltree.css\");\n\n\n// Skilltree test\nconst testData = {\n  HTML: {\n    question: \"請問 HTML 是什麼？\",\n    1: \"標籤語言\",\n    2: \"資料庫工具\",\n    3: \"瀏覽器規範\",\n    ans: 1,\n    text: \"你通過第一關，HTML 是成為前端工程師的橋頭堡，也是網站給人的第一印象，一定要學好才行。\",\n  },\n  CSS: {\n    question: \"SCSS 跟 CSS 差別？\",\n    1: \"SCSS 用變數控制\",\n    2: \"SCSS 非縮排語法\",\n    3: \"不同程式語言\",\n    ans: 1,\n    text: \"哇，你竟然連 CSS 也略懂略懂。如果階層樣式學得好，就具備基礎網頁設計師的能力了，這時候，對於細節的掌握就更加重要囉。\",\n  },\n  JavaScript: {\n    question: \"何者非 JS 定義變數的方式？\",\n    1: \"function\",\n    2: \"var\",\n    3: \"let\",\n    ans: 1,\n    text: \"恭喜你通過 JavaScript 關卡。JavaScript 也是小編最喜歡的語言，掌握它，就等於邁入前端工程師的行列，它不只能為你帶來一份工作，也擴展你的視野，擁有接軌科技的能力。\",\n  },\n  RWD: {\n    question: \"如何在不同螢幕寬度下改變樣式？\",\n    1: \"透過 media 操作\",\n    2: \"使用事件物件\",\n    3: \"變數控制\",\n    ans: 1,\n    text: \"RWD 很神奇吧，它讓你在手機、平板上，都能方便觀看網頁，而不用放大縮小視窗，是讓使用者體驗升級的良方。\",\n  },\n  jQuery: {\n    question: \"jQuery 與 JS 之比較何者正確？\",\n    1: \"jQuery 含錢字符號\",\n    2: \"JS 是一種框架\",\n    3: \"jQuery 並未開源\",\n    ans: 1,\n    text: \"jQuery 是相當方便的 JavaScript 函式庫，它幫你把程式封裝好，只要加上經典的 $ 字號作為前綴，就能使用眾多功能。\",\n  },\n  GitHub: {\n    question: \"GitHub 不能做什麼？\",\n    1: \"測試程式正確性\",\n    2: \"程式碼倉庫\",\n    3: \"共同軟體開發\",\n    ans: 1,\n    text: \"在學習程式語言之前，很難想像有 GitHub 的存在吧，竟然有個倉庫專門在管理程式語言，還能讓人複製、共同編輯，並記錄每一次的 commit ，是一款優秀的協作工具。\",\n  },\n  SCSS: {\n    question: \"何者不屬於 CSS 預處理器？\",\n    1: \"Gulp\",\n    2: \"SCSS\",\n    3: \"PostCSS\",\n    ans: 1,\n    text: \"css 屬於程式設計入門款，而預處理器能以更有效率的方式，撰寫階層樣式，如果你擁有 JavaScript 的基本概念，學起來會特別快唷。\",\n  },\n  Bootstrap: {\n    question: \"Bootstrap 是一種？\",\n    1: \"樣式擴充元件\",\n    2: \"打包工具\",\n    3: \"套件管理工具\",\n    ans: 1,\n    text: \"看來你學蠻快的，Bootstrap 能做到的，css 也能做到，如果有時間，不仿試試手刻 Bootstrap 的特效，精進樣式調校的能力。\",\n  },\n  Webpack: {\n    question: \"使用 Webpack 需要安裝？\",\n    1: \"Node.js\",\n    2: \"Babel\",\n    3: \"Styled-components\",\n    ans: 1,\n    text: \"你已經越來越厲害，掌握了近期火紅的打包工具，Webpack 和 React 是絕配，是幫助瀏覽器進行「翻譯」的良方。\",\n  },\n  React: {\n    question: \"React 有何特性？？\",\n    1: \"建置單頁式網站\",\n    2: \"不存在異步問題\",\n    3: \"不需要 Babel 編譯\",\n    ans: 1,\n    text: \"你太強了，React 是不容易掌握的框架，能讓使用者的體驗更好，你所使用的 facebook 就是運用這套框架呢。\",\n  },\n  UnitTest: {\n    question: \"為什麼要做單元測試？\",\n    1: \"確保程式邏輯正確\",\n    2: \"讓 Scrum 運作順利\",\n    3: \"資料安全性\",\n    ans: 1,\n    text: \"終於抵達最後一關了，單元測試是為了確保函式的正確性，而進行的作業。雖然單元測試是最後一關，但工程的世界無止盡，身為一位 geek 就是要不斷學習精進唷。\",\n  },\n};\n\nclass SkillHandler {\n  constructor(skill, skillId, cardId) {\n    this.skill = document.querySelector(`${skillId}`);\n    this.card = document.querySelector(`${cardId}`);\n\n    this.testSection = document.querySelector(\".skill-test-section\");\n    this.optionTitle = document.querySelector(\"#question-title\");\n    this.option1 = document.querySelector(\"#question-option-1\");\n    this.option2 = document.querySelector(\"#question-option-2\");\n    this.option3 = document.querySelector(\"#question-option-3\");\n    this.animation = document.querySelector(\"#correct-answer-animation\");\n    this.animationText = document.querySelector(\"#correct-ans-text\");\n\n    this.skilltreeIconContainer = document.querySelector(\n      \".skilltree-icon-container\"\n    );\n    this.skilltreeContainer = document.querySelector(\".skilltree-container\");\n\n    this.skill.addEventListener(\"mouseover\", () => this.showCard());\n    this.skill.addEventListener(\"mouseout\", () => this.closeCard());\n  }\n\n  showCard() {\n    this.card.style.display = \"block\";\n  }\n\n  closeCard() {\n    this.card.style.display = \"none\";\n  }\n\n  setDisplay(element) {\n    element.style.display = \"flex\";\n  }\n\n  setDisplayNone(element) {\n    element.style.display = \"none\";\n  }\n\n  async setClickDisplayEvent(skill) {\n    this.skill.addEventListener(\"click\", async () => {\n      await this.showTestCard(skill);\n    });\n  }\n\n  removeClickEvent(skill) {\n    this.skill.removeEventListener(\"click\", () => this.showTestCard(skill));\n  }\n\n  async showTestCard(skill) {\n    this.cancelWrongOptionStyles(this.option1);\n    this.cancelWrongOptionStyles(this.option2);\n    this.cancelWrongOptionStyles(this.option3);\n\n    this.optionTitle.innerHTML = testData[skill].question;\n    this.option1.innerHTML = testData[skill][1];\n    this.option2.innerHTML = testData[skill][2];\n    this.option3.innerHTML = testData[skill][3];\n    this.testSection.style.display = \"flex\";\n  }\n\n  async setAnswerClickEvent(skill) {\n    const ansOption = \"option\" + `${testData[skill].ans}`;\n    const ansElement = this[ansOption];\n\n    return new Promise((resolve) => {\n      ansElement.addEventListener(\"click\", async () => {\n        this.setDisplay(this.animation);\n        this.applyCorrectOptionStyles(ansElement);\n        await this.animateTextWithSound(testData[skill][\"text\"]);\n        this.animation.addEventListener(\"click\", () => {\n          this.setDisplayNone(this.animation);\n          resolve();\n        });\n      });\n    });\n  }\n\n  async setWrongClickEvent(skill) {\n    const correctOption = testData[skill].ans;\n    const wrongOptions = [1, 2, 3].filter((option) => option !== correctOption);\n\n    for (const option of wrongOptions) {\n      const optionName = \"option\" + `${option}`;\n      const optionElement = this[optionName];\n      optionElement.addEventListener(\"click\", async () => {\n        await this.applyWrongOptionStyles(optionElement);\n      });\n    }\n  }\n\n  async applyCorrectOptionStyles(optionElement) {\n    optionElement.style.background = `url(../img/correct-icon.svg) 4% 50% / contain no-repeat rgba(255, 255, 255, 0.8)`;\n    optionElement.style.backgroundSize = \"20px 20px\";\n  }\n\n  async cancelCorrectOptionStyles(optionElement) {\n    optionElement.style.background = \"none\";\n  }\n\n  async applyWrongOptionStyles(optionElement) {\n    optionElement.classList.add(\"shakeAnimation\");\n    optionElement.style.background = `url(../img/wrong-icon.svg) 4% 50% / contain no-repeat rgba(255, 255, 255, 0.8)`;\n    optionElement.style.backgroundSize = \"20px 20px\";\n  }\n\n  async cancelWrongOptionStyles(optionElement) {\n    optionElement.classList.remove(\"shakeAnimation\");\n    optionElement.style.background = \"white\";\n  }\n\n  async animateTextWithSound(text) {\n    // console.log(text);\n    const typingSound = new Audio(\"../img/typing.mp3\");\n    let index = 0;\n\n    const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n    this.animationText.innerHTML = \"\";\n\n    while (index < text.length) {\n      this.animationText.innerHTML += text[index];\n      typingSound.play();\n      index++;\n      await delay(100);\n    }\n\n    typingSound.pause();\n  }\n}\n\n// Skilltree icon display\nconst skilltreeIconDisplay = document.querySelector(\"#skilltree-icon-display\");\nconst iconWindow = document.querySelector(\"#icon-window\");\nconst iconBox = document.querySelector(\".icon-box\");\nconst iconSelect = document.querySelectorAll(\".icon-select\");\n\nskilltreeIconDisplay.addEventListener(\"click\", () => {\n  iconWindow.style.display = \"flex\";\n});\n\niconWindow.addEventListener(\"click\", () => {\n  iconWindow.style.display = \"none\";\n});\n\niconBox.addEventListener(\"click\", (event) => {\n  event.stopPropagation();\n});\n\niconSelect.forEach((icon) => {\n  icon.addEventListener(\"click\", (event) => {\n    skilltreeIconDisplay.src = icon.src;\n    iconWindow.style.display = \"none\";\n  });\n});\n\n// Skilltree skills\nconst skills = [\n  \"HTML\",\n  \"CSS\",\n  \"JavaScript\",\n  \"jQuery\",\n  \"RWD\",\n  \"GitHub\",\n  \"Webpack\",\n  \"SCSS\",\n  \"React\",\n  \"Bootstrap\",\n  \"UnitTest\",\n];\n\nskills.forEach((skill) => {\n  new SkillHandler(`${skill}`, `#skill-${skill}`, `#skill-${skill}-card`);\n});\n\nconst newElement = document.createElement(\"div\");\nnewElement.className = \"skilltree-icon-container\";\nnewElement.innerHTML = `\n  <img\n    class=\"skilltree-icon\"\n    id=\"skilltree-icon-display\"\n    src=\"https://frankyeah.github.io/Front-Enter/images/cute.svg\"\n\n  />\n  <div id=\"icon-window\" style=\"display: none\">\n    <div class=\"icon-box\" id=\"icon-box\">\n      <p>請選擇 Icon</p>\n      <div class=\"icon-img-container\">\n        <img\n          class=\"skilltree-icon icon-select\"\n          id=\"icon-1\"\n          src=\"https://frankyeah.github.io/Front-Enter/images/cute.svg\"\n        />\n        <img\n          class=\"skilltree-icon icon-select\"\n          id=\"icon-2\"\n          src=\"https://frankyeah.github.io/Front-Enter/images/cute2.svg\"\n        />\n        <img\n          class=\"skilltree-icon icon-select\"\n          id=\"icon-3\"\n          src=\"https://frankyeah.github.io/Front-Enter/images/cute3.svg\"\n        />\n      </div>\n    </div>\n  </div>\n`;\n\ndocument.querySelector(\".skill-test-section\").addEventListener(\"click\", () => {\n  document.querySelector(\".skill-test-section\").style.display = \"none\";\n});\n\ndocument\n  .querySelector(\".test-card-question\")\n  .addEventListener(\"click\", (event) => {\n    event.stopPropagation();\n  });\n\nconst skilltreeIconContainer = document.querySelector(\n  \".skilltree-icon-container\"\n);\n\nfunction removeAllClickEvents(element) {\n  const oldElement = element;\n  const newElement = oldElement.cloneNode(true);\n  oldElement.parentNode.replaceChild(newElement, oldElement);\n  element = newElement;\n}\n\nasync function handleSkill(\n  skill,\n  skillId,\n  cardId,\n  nextSkillId,\n  desktopLeftValue,\n  mobileLeftValue\n) {\n  const skillHandler = new SkillHandler(skill, skillId, cardId);\n  skillHandler.setClickDisplayEvent(skill);\n  skillHandler.setWrongClickEvent(skill);\n  await skillHandler.setAnswerClickEvent(skill);\n\n  const skilltreeIconContainerSkill = document.querySelector(\n    \".skilltree-icon-container\"\n  );\n  if (skilltreeIconContainerSkill && skilltreeIconContainerSkill.parentNode) {\n    skilltreeIconContainerSkill.parentNode.removeChild(\n      skilltreeIconContainerSkill\n    );\n    let targetElement = document.querySelector(skillId);\n    targetElement.parentNode.insertBefore(newElement, targetElement);\n\n    const leftValue =\n      window.innerWidth <= 767 ? mobileLeftValue : desktopLeftValue;\n    newElement.style.left = leftValue;\n  }\n\n  document.querySelector(skillId).classList.remove(\"skilltree-focus\");\n  document.querySelector(skillId).classList.add(\"skilltree-completed\");\n  document.querySelector(nextSkillId).classList.add(\"skilltree-focus\");\n  removeAllClickEvents(document.querySelector(skillId));\n  removeAllClickEvents(document.querySelector(\"#question-option-1\"));\n  removeAllClickEvents(document.querySelector(\"#question-option-2\"));\n  removeAllClickEvents(document.querySelector(\"#question-option-3\"));\n}\n\nasync function skilltreeGame() {\n  document.querySelector(\"#skill-HTML\").classList.add(\"skilltree-focus\");\n  await handleSkill(\n    \"HTML\",\n    \"#skill-HTML\",\n    \"#skill-HTML-card\",\n    \"#skill-CSS\",\n    \"25%\",\n    \"20%\"\n  );\n  await handleSkill(\n    \"CSS\",\n    \"#skill-CSS\",\n    \"#skill-CSS-card\",\n    \"#skill-JavaScript\",\n    \"8%\",\n    \"6%\"\n  );\n  await handleSkill(\n    \"JavaScript\",\n    \"#skill-JavaScript\",\n    \"#skill-JavaScript-card\",\n    \"#skill-RWD\",\n    \"75%\",\n    \"73%\"\n  );\n  await handleSkill(\n    \"RWD\",\n    \"#skill-RWD\",\n    \"#skill-RWD-card\",\n    \"#skill-jQuery\",\n    \"75%\",\n    \"73%\"\n  );\n  await handleSkill(\n    \"jQuery\",\n    \"#skill-jQuery\",\n    \"#skill-jQuery-card\",\n    \"#skill-GitHub\",\n    \"8%\",\n    \"6%\"\n  );\n  await handleSkill(\n    \"GitHub\",\n    \"#skill-GitHub\",\n    \"#skill-GitHub-card\",\n    \"#skill-SCSS\",\n    \"25%\",\n    \"20%\"\n  );\n  await handleSkill(\n    \"SCSS\",\n    \"#skill-SCSS\",\n    \"#skill-SCSS-card\",\n    \"#skill-Bootstrap\",\n    \"8%\",\n    \"6%\"\n  );\n  await handleSkill(\n    \"Bootstrap\",\n    \"#skill-Bootstrap\",\n    \"#skill-Bootstrap-card\",\n    \"#skill-Webpack\",\n    \"8%\",\n    \"6%\"\n  );\n  await handleSkill(\n    \"Webpack\",\n    \"#skill-Webpack\",\n    \"#skill-Webpack-card\",\n    \"#skill-React\",\n    \"75%\",\n    \"73%\"\n  );\n  await handleSkill(\n    \"React\",\n    \"#skill-React\",\n    \"#skill-React-card\",\n    \"#skill-UnitTest\",\n    \"75%\",\n    \"73%\"\n  );\n  await handleSkill(\n    \"UnitTest\",\n    \"#skill-UnitTest\",\n    \"#skill-UnitTest-card\",\n    null,\n    \"25%\",\n    \"20%\"\n  );\n}\n\nskilltreeGame();\n\n\n//# sourceURL=webpack://front-enter/./src/skilltree.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/skilltree.js");
/******/ 	
/******/ })()
;